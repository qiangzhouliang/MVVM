plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion deps.compile_sdk

    defaultConfig {
        applicationId "com.qzl.mvvm"
        minSdkVersion deps.min_sdk
        targetSdkVersion deps.target_sdk
        versionCode 1
        versionName "1.0"

        // Enabling multidex support.
        multiDexEnabled true

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' , 'armeabi-v7a', 'arm64-v8a'
        }
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            //打包时过滤无用文件,有效时，打release包会出错
            minifyEnabled true
            //移出无用的resource文件
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            //打包时过滤无用文件,有效时，打release包会出错
            minifyEnabled false
            //移出无用的resource文件
            shrinkResources false
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
android.applicationVariants.all { variant ->
    if (variant.buildType.name == 'release') {//release版本
        variant.mergeAssets.doLast {
            //删除assets文件夹下的debug.properties
            delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['debug.properties']))
        }
    }
    variant.outputs.all {
        outputFileName = "qgFrame_${variant.buildType.name}.apk"
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.kotlin_stdlib
    implementation project(':base_common')

    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.0'
    implementation  'com.scwang.smart:refresh-header-classics:2.0.0'    //经典刷新头
    implementation  'com.scwang.smart:refresh-footer-classics:2.0.0'    //经典加载
    //使用navigation需要引入的包开始
    def nav_version = "2.3.1"
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:1.0.0-alpha01"

    //使用navigation需要引入的包结束
}